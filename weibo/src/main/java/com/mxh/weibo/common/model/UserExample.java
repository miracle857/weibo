package com.mxh.weibo.common.model;

import java.util.ArrayList;
import java.util.List;

public class UserExample {
    /**
	 * @mbggenerated
	 */
	protected String orderByClause;
	/**
	 * @mbggenerated
	 */
	protected boolean distinct;
	/**
	 * @mbggenerated
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method corresponds to the database table weibo_user
	 * @mbggenerated
	 */
	public UserExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method corresponds to the database table weibo_user
	 * @mbggenerated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method corresponds to the database table weibo_user
	 * @mbggenerated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method corresponds to the database table weibo_user
	 * @mbggenerated
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method corresponds to the database table weibo_user
	 * @mbggenerated
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method corresponds to the database table weibo_user
	 * @mbggenerated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method corresponds to the database table weibo_user
	 * @mbggenerated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method corresponds to the database table weibo_user
	 * @mbggenerated
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method corresponds to the database table weibo_user
	 * @mbggenerated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method corresponds to the database table weibo_user
	 * @mbggenerated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method corresponds to the database table weibo_user
	 * @mbggenerated
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table weibo_user
	 * @mbggenerated
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andUuidIsNull() {
			addCriterion("user.UUID is null");
			return (Criteria) this;
		}

		public Criteria andUuidIsNotNull() {
			addCriterion("user.UUID is not null");
			return (Criteria) this;
		}

		public Criteria andUuidEqualTo(String value) {
			addCriterion("user.UUID =", value, "uuid");
			return (Criteria) this;
		}

		public Criteria andUuidNotEqualTo(String value) {
			addCriterion("user.UUID <>", value, "uuid");
			return (Criteria) this;
		}

		public Criteria andUuidGreaterThan(String value) {
			addCriterion("user.UUID >", value, "uuid");
			return (Criteria) this;
		}

		public Criteria andUuidGreaterThanOrEqualTo(String value) {
			addCriterion("user.UUID >=", value, "uuid");
			return (Criteria) this;
		}

		public Criteria andUuidLessThan(String value) {
			addCriterion("user.UUID <", value, "uuid");
			return (Criteria) this;
		}

		public Criteria andUuidLessThanOrEqualTo(String value) {
			addCriterion("user.UUID <=", value, "uuid");
			return (Criteria) this;
		}

		public Criteria andUuidLike(String value) {
			addCriterion("user.UUID like", value, "uuid");
			return (Criteria) this;
		}

		public Criteria andUuidNotLike(String value) {
			addCriterion("user.UUID not like", value, "uuid");
			return (Criteria) this;
		}

		public Criteria andUuidIn(List<String> values) {
			addCriterion("user.UUID in", values, "uuid");
			return (Criteria) this;
		}

		public Criteria andUuidNotIn(List<String> values) {
			addCriterion("user.UUID not in", values, "uuid");
			return (Criteria) this;
		}

		public Criteria andUuidBetween(String value1, String value2) {
			addCriterion("user.UUID between", value1, value2, "uuid");
			return (Criteria) this;
		}

		public Criteria andUuidNotBetween(String value1, String value2) {
			addCriterion("user.UUID not between", value1, value2, "uuid");
			return (Criteria) this;
		}

		public Criteria andUsernameIsNull() {
			addCriterion("user.USERNAME is null");
			return (Criteria) this;
		}

		public Criteria andUsernameIsNotNull() {
			addCriterion("user.USERNAME is not null");
			return (Criteria) this;
		}

		public Criteria andUsernameEqualTo(String value) {
			addCriterion("user.USERNAME =", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameNotEqualTo(String value) {
			addCriterion("user.USERNAME <>", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameGreaterThan(String value) {
			addCriterion("user.USERNAME >", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameGreaterThanOrEqualTo(String value) {
			addCriterion("user.USERNAME >=", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameLessThan(String value) {
			addCriterion("user.USERNAME <", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameLessThanOrEqualTo(String value) {
			addCriterion("user.USERNAME <=", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameLike(String value) {
			addCriterion("user.USERNAME like", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameNotLike(String value) {
			addCriterion("user.USERNAME not like", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameIn(List<String> values) {
			addCriterion("user.USERNAME in", values, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameNotIn(List<String> values) {
			addCriterion("user.USERNAME not in", values, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameBetween(String value1, String value2) {
			addCriterion("user.USERNAME between", value1, value2, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameNotBetween(String value1, String value2) {
			addCriterion("user.USERNAME not between", value1, value2, "username");
			return (Criteria) this;
		}

		public Criteria andNicknameIsNull() {
			addCriterion("user.NICKNAME is null");
			return (Criteria) this;
		}

		public Criteria andNicknameIsNotNull() {
			addCriterion("user.NICKNAME is not null");
			return (Criteria) this;
		}

		public Criteria andNicknameEqualTo(String value) {
			addCriterion("user.NICKNAME =", value, "nickname");
			return (Criteria) this;
		}

		public Criteria andNicknameNotEqualTo(String value) {
			addCriterion("user.NICKNAME <>", value, "nickname");
			return (Criteria) this;
		}

		public Criteria andNicknameGreaterThan(String value) {
			addCriterion("user.NICKNAME >", value, "nickname");
			return (Criteria) this;
		}

		public Criteria andNicknameGreaterThanOrEqualTo(String value) {
			addCriterion("user.NICKNAME >=", value, "nickname");
			return (Criteria) this;
		}

		public Criteria andNicknameLessThan(String value) {
			addCriterion("user.NICKNAME <", value, "nickname");
			return (Criteria) this;
		}

		public Criteria andNicknameLessThanOrEqualTo(String value) {
			addCriterion("user.NICKNAME <=", value, "nickname");
			return (Criteria) this;
		}

		public Criteria andNicknameLike(String value) {
			addCriterion("user.NICKNAME like", value, "nickname");
			return (Criteria) this;
		}

		public Criteria andNicknameNotLike(String value) {
			addCriterion("user.NICKNAME not like", value, "nickname");
			return (Criteria) this;
		}

		public Criteria andNicknameIn(List<String> values) {
			addCriterion("user.NICKNAME in", values, "nickname");
			return (Criteria) this;
		}

		public Criteria andNicknameNotIn(List<String> values) {
			addCriterion("user.NICKNAME not in", values, "nickname");
			return (Criteria) this;
		}

		public Criteria andNicknameBetween(String value1, String value2) {
			addCriterion("user.NICKNAME between", value1, value2, "nickname");
			return (Criteria) this;
		}

		public Criteria andNicknameNotBetween(String value1, String value2) {
			addCriterion("user.NICKNAME not between", value1, value2, "nickname");
			return (Criteria) this;
		}

		public Criteria andPasswordIsNull() {
			addCriterion("user.PASSWORD is null");
			return (Criteria) this;
		}

		public Criteria andPasswordIsNotNull() {
			addCriterion("user.PASSWORD is not null");
			return (Criteria) this;
		}

		public Criteria andPasswordEqualTo(String value) {
			addCriterion("user.PASSWORD =", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordNotEqualTo(String value) {
			addCriterion("user.PASSWORD <>", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordGreaterThan(String value) {
			addCriterion("user.PASSWORD >", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordGreaterThanOrEqualTo(String value) {
			addCriterion("user.PASSWORD >=", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordLessThan(String value) {
			addCriterion("user.PASSWORD <", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordLessThanOrEqualTo(String value) {
			addCriterion("user.PASSWORD <=", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordLike(String value) {
			addCriterion("user.PASSWORD like", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordNotLike(String value) {
			addCriterion("user.PASSWORD not like", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordIn(List<String> values) {
			addCriterion("user.PASSWORD in", values, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordNotIn(List<String> values) {
			addCriterion("user.PASSWORD not in", values, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordBetween(String value1, String value2) {
			addCriterion("user.PASSWORD between", value1, value2, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordNotBetween(String value1, String value2) {
			addCriterion("user.PASSWORD not between", value1, value2, "password");
			return (Criteria) this;
		}

		public Criteria andCommentIsNull() {
			addCriterion("user.COMMENT is null");
			return (Criteria) this;
		}

		public Criteria andCommentIsNotNull() {
			addCriterion("user.COMMENT is not null");
			return (Criteria) this;
		}

		public Criteria andCommentEqualTo(String value) {
			addCriterion("user.COMMENT =", value, "comment");
			return (Criteria) this;
		}

		public Criteria andCommentNotEqualTo(String value) {
			addCriterion("user.COMMENT <>", value, "comment");
			return (Criteria) this;
		}

		public Criteria andCommentGreaterThan(String value) {
			addCriterion("user.COMMENT >", value, "comment");
			return (Criteria) this;
		}

		public Criteria andCommentGreaterThanOrEqualTo(String value) {
			addCriterion("user.COMMENT >=", value, "comment");
			return (Criteria) this;
		}

		public Criteria andCommentLessThan(String value) {
			addCriterion("user.COMMENT <", value, "comment");
			return (Criteria) this;
		}

		public Criteria andCommentLessThanOrEqualTo(String value) {
			addCriterion("user.COMMENT <=", value, "comment");
			return (Criteria) this;
		}

		public Criteria andCommentLike(String value) {
			addCriterion("user.COMMENT like", value, "comment");
			return (Criteria) this;
		}

		public Criteria andCommentNotLike(String value) {
			addCriterion("user.COMMENT not like", value, "comment");
			return (Criteria) this;
		}

		public Criteria andCommentIn(List<String> values) {
			addCriterion("user.COMMENT in", values, "comment");
			return (Criteria) this;
		}

		public Criteria andCommentNotIn(List<String> values) {
			addCriterion("user.COMMENT not in", values, "comment");
			return (Criteria) this;
		}

		public Criteria andCommentBetween(String value1, String value2) {
			addCriterion("user.COMMENT between", value1, value2, "comment");
			return (Criteria) this;
		}

		public Criteria andCommentNotBetween(String value1, String value2) {
			addCriterion("user.COMMENT not between", value1, value2, "comment");
			return (Criteria) this;
		}

		public Criteria andStatusIsNull() {
			addCriterion("user.STATUS is null");
			return (Criteria) this;
		}

		public Criteria andStatusIsNotNull() {
			addCriterion("user.STATUS is not null");
			return (Criteria) this;
		}

		public Criteria andStatusEqualTo(String value) {
			addCriterion("user.STATUS =", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotEqualTo(String value) {
			addCriterion("user.STATUS <>", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusGreaterThan(String value) {
			addCriterion("user.STATUS >", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusGreaterThanOrEqualTo(String value) {
			addCriterion("user.STATUS >=", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusLessThan(String value) {
			addCriterion("user.STATUS <", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusLessThanOrEqualTo(String value) {
			addCriterion("user.STATUS <=", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusLike(String value) {
			addCriterion("user.STATUS like", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotLike(String value) {
			addCriterion("user.STATUS not like", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusIn(List<String> values) {
			addCriterion("user.STATUS in", values, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotIn(List<String> values) {
			addCriterion("user.STATUS not in", values, "status");
			return (Criteria) this;
		}

		public Criteria andStatusBetween(String value1, String value2) {
			addCriterion("user.STATUS between", value1, value2, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotBetween(String value1, String value2) {
			addCriterion("user.STATUS not between", value1, value2, "status");
			return (Criteria) this;
		}

		public Criteria andEmailIsNull() {
			addCriterion("user.EMAIL is null");
			return (Criteria) this;
		}

		public Criteria andEmailIsNotNull() {
			addCriterion("user.EMAIL is not null");
			return (Criteria) this;
		}

		public Criteria andEmailEqualTo(String value) {
			addCriterion("user.EMAIL =", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailNotEqualTo(String value) {
			addCriterion("user.EMAIL <>", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailGreaterThan(String value) {
			addCriterion("user.EMAIL >", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailGreaterThanOrEqualTo(String value) {
			addCriterion("user.EMAIL >=", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailLessThan(String value) {
			addCriterion("user.EMAIL <", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailLessThanOrEqualTo(String value) {
			addCriterion("user.EMAIL <=", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailLike(String value) {
			addCriterion("user.EMAIL like", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailNotLike(String value) {
			addCriterion("user.EMAIL not like", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailIn(List<String> values) {
			addCriterion("user.EMAIL in", values, "email");
			return (Criteria) this;
		}

		public Criteria andEmailNotIn(List<String> values) {
			addCriterion("user.EMAIL not in", values, "email");
			return (Criteria) this;
		}

		public Criteria andEmailBetween(String value1, String value2) {
			addCriterion("user.EMAIL between", value1, value2, "email");
			return (Criteria) this;
		}

		public Criteria andEmailNotBetween(String value1, String value2) {
			addCriterion("user.EMAIL not between", value1, value2, "email");
			return (Criteria) this;
		}

		public Criteria andDeletedIsNull() {
			addCriterion("user.DELETED is null");
			return (Criteria) this;
		}

		public Criteria andDeletedIsNotNull() {
			addCriterion("user.DELETED is not null");
			return (Criteria) this;
		}

		public Criteria andDeletedEqualTo(Byte value) {
			addCriterion("user.DELETED =", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedNotEqualTo(Byte value) {
			addCriterion("user.DELETED <>", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedGreaterThan(Byte value) {
			addCriterion("user.DELETED >", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedGreaterThanOrEqualTo(Byte value) {
			addCriterion("user.DELETED >=", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedLessThan(Byte value) {
			addCriterion("user.DELETED <", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedLessThanOrEqualTo(Byte value) {
			addCriterion("user.DELETED <=", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedIn(List<Byte> values) {
			addCriterion("user.DELETED in", values, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedNotIn(List<Byte> values) {
			addCriterion("user.DELETED not in", values, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedBetween(Byte value1, Byte value2) {
			addCriterion("user.DELETED between", value1, value2, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedNotBetween(Byte value1, Byte value2) {
			addCriterion("user.DELETED not between", value1, value2, "deleted");
			return (Criteria) this;
		}

		public Criteria andHeadimgIsNull() {
			addCriterion("user.HEADIMG is null");
			return (Criteria) this;
		}

		public Criteria andHeadimgIsNotNull() {
			addCriterion("user.HEADIMG is not null");
			return (Criteria) this;
		}

		public Criteria andHeadimgEqualTo(String value) {
			addCriterion("user.HEADIMG =", value, "headimg");
			return (Criteria) this;
		}

		public Criteria andHeadimgNotEqualTo(String value) {
			addCriterion("user.HEADIMG <>", value, "headimg");
			return (Criteria) this;
		}

		public Criteria andHeadimgGreaterThan(String value) {
			addCriterion("user.HEADIMG >", value, "headimg");
			return (Criteria) this;
		}

		public Criteria andHeadimgGreaterThanOrEqualTo(String value) {
			addCriterion("user.HEADIMG >=", value, "headimg");
			return (Criteria) this;
		}

		public Criteria andHeadimgLessThan(String value) {
			addCriterion("user.HEADIMG <", value, "headimg");
			return (Criteria) this;
		}

		public Criteria andHeadimgLessThanOrEqualTo(String value) {
			addCriterion("user.HEADIMG <=", value, "headimg");
			return (Criteria) this;
		}

		public Criteria andHeadimgLike(String value) {
			addCriterion("user.HEADIMG like", value, "headimg");
			return (Criteria) this;
		}

		public Criteria andHeadimgNotLike(String value) {
			addCriterion("user.HEADIMG not like", value, "headimg");
			return (Criteria) this;
		}

		public Criteria andHeadimgIn(List<String> values) {
			addCriterion("user.HEADIMG in", values, "headimg");
			return (Criteria) this;
		}

		public Criteria andHeadimgNotIn(List<String> values) {
			addCriterion("user.HEADIMG not in", values, "headimg");
			return (Criteria) this;
		}

		public Criteria andHeadimgBetween(String value1, String value2) {
			addCriterion("user.HEADIMG between", value1, value2, "headimg");
			return (Criteria) this;
		}

		public Criteria andHeadimgNotBetween(String value1, String value2) {
			addCriterion("user.HEADIMG not between", value1, value2, "headimg");
			return (Criteria) this;
		}

		public Criteria andWeiboIsNull() {
			addCriterion("user.WEIBO is null");
			return (Criteria) this;
		}

		public Criteria andWeiboIsNotNull() {
			addCriterion("user.WEIBO is not null");
			return (Criteria) this;
		}

		public Criteria andWeiboEqualTo(Integer value) {
			addCriterion("user.WEIBO =", value, "weibo");
			return (Criteria) this;
		}

		public Criteria andWeiboNotEqualTo(Integer value) {
			addCriterion("user.WEIBO <>", value, "weibo");
			return (Criteria) this;
		}

		public Criteria andWeiboGreaterThan(Integer value) {
			addCriterion("user.WEIBO >", value, "weibo");
			return (Criteria) this;
		}

		public Criteria andWeiboGreaterThanOrEqualTo(Integer value) {
			addCriterion("user.WEIBO >=", value, "weibo");
			return (Criteria) this;
		}

		public Criteria andWeiboLessThan(Integer value) {
			addCriterion("user.WEIBO <", value, "weibo");
			return (Criteria) this;
		}

		public Criteria andWeiboLessThanOrEqualTo(Integer value) {
			addCriterion("user.WEIBO <=", value, "weibo");
			return (Criteria) this;
		}

		public Criteria andWeiboIn(List<Integer> values) {
			addCriterion("user.WEIBO in", values, "weibo");
			return (Criteria) this;
		}

		public Criteria andWeiboNotIn(List<Integer> values) {
			addCriterion("user.WEIBO not in", values, "weibo");
			return (Criteria) this;
		}

		public Criteria andWeiboBetween(Integer value1, Integer value2) {
			addCriterion("user.WEIBO between", value1, value2, "weibo");
			return (Criteria) this;
		}

		public Criteria andWeiboNotBetween(Integer value1, Integer value2) {
			addCriterion("user.WEIBO not between", value1, value2, "weibo");
			return (Criteria) this;
		}

		public Criteria andFollowIsNull() {
			addCriterion("user.FOLLOW is null");
			return (Criteria) this;
		}

		public Criteria andFollowIsNotNull() {
			addCriterion("user.FOLLOW is not null");
			return (Criteria) this;
		}

		public Criteria andFollowEqualTo(Integer value) {
			addCriterion("user.FOLLOW =", value, "follow");
			return (Criteria) this;
		}

		public Criteria andFollowNotEqualTo(Integer value) {
			addCriterion("user.FOLLOW <>", value, "follow");
			return (Criteria) this;
		}

		public Criteria andFollowGreaterThan(Integer value) {
			addCriterion("user.FOLLOW >", value, "follow");
			return (Criteria) this;
		}

		public Criteria andFollowGreaterThanOrEqualTo(Integer value) {
			addCriterion("user.FOLLOW >=", value, "follow");
			return (Criteria) this;
		}

		public Criteria andFollowLessThan(Integer value) {
			addCriterion("user.FOLLOW <", value, "follow");
			return (Criteria) this;
		}

		public Criteria andFollowLessThanOrEqualTo(Integer value) {
			addCriterion("user.FOLLOW <=", value, "follow");
			return (Criteria) this;
		}

		public Criteria andFollowIn(List<Integer> values) {
			addCriterion("user.FOLLOW in", values, "follow");
			return (Criteria) this;
		}

		public Criteria andFollowNotIn(List<Integer> values) {
			addCriterion("user.FOLLOW not in", values, "follow");
			return (Criteria) this;
		}

		public Criteria andFollowBetween(Integer value1, Integer value2) {
			addCriterion("user.FOLLOW between", value1, value2, "follow");
			return (Criteria) this;
		}

		public Criteria andFollowNotBetween(Integer value1, Integer value2) {
			addCriterion("user.FOLLOW not between", value1, value2, "follow");
			return (Criteria) this;
		}

		public Criteria andFollowerIsNull() {
			addCriterion("user.FOLLOWER is null");
			return (Criteria) this;
		}

		public Criteria andFollowerIsNotNull() {
			addCriterion("user.FOLLOWER is not null");
			return (Criteria) this;
		}

		public Criteria andFollowerEqualTo(Integer value) {
			addCriterion("user.FOLLOWER =", value, "follower");
			return (Criteria) this;
		}

		public Criteria andFollowerNotEqualTo(Integer value) {
			addCriterion("user.FOLLOWER <>", value, "follower");
			return (Criteria) this;
		}

		public Criteria andFollowerGreaterThan(Integer value) {
			addCriterion("user.FOLLOWER >", value, "follower");
			return (Criteria) this;
		}

		public Criteria andFollowerGreaterThanOrEqualTo(Integer value) {
			addCriterion("user.FOLLOWER >=", value, "follower");
			return (Criteria) this;
		}

		public Criteria andFollowerLessThan(Integer value) {
			addCriterion("user.FOLLOWER <", value, "follower");
			return (Criteria) this;
		}

		public Criteria andFollowerLessThanOrEqualTo(Integer value) {
			addCriterion("user.FOLLOWER <=", value, "follower");
			return (Criteria) this;
		}

		public Criteria andFollowerIn(List<Integer> values) {
			addCriterion("user.FOLLOWER in", values, "follower");
			return (Criteria) this;
		}

		public Criteria andFollowerNotIn(List<Integer> values) {
			addCriterion("user.FOLLOWER not in", values, "follower");
			return (Criteria) this;
		}

		public Criteria andFollowerBetween(Integer value1, Integer value2) {
			addCriterion("user.FOLLOWER between", value1, value2, "follower");
			return (Criteria) this;
		}

		public Criteria andFollowerNotBetween(Integer value1, Integer value2) {
			addCriterion("user.FOLLOWER not between", value1, value2, "follower");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table weibo_user
	 * @mbggenerated
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class corresponds to the database table weibo_user
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}