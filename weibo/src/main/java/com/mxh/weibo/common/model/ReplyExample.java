package com.mxh.weibo.common.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class ReplyExample {
    /**
	 * @mbggenerated
	 */
	protected String orderByClause;
	/**
	 * @mbggenerated
	 */
	protected boolean distinct;
	/**
	 * @mbggenerated
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method corresponds to the database table weibo_reply
	 * @mbggenerated
	 */
	public ReplyExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method corresponds to the database table weibo_reply
	 * @mbggenerated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method corresponds to the database table weibo_reply
	 * @mbggenerated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method corresponds to the database table weibo_reply
	 * @mbggenerated
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method corresponds to the database table weibo_reply
	 * @mbggenerated
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method corresponds to the database table weibo_reply
	 * @mbggenerated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method corresponds to the database table weibo_reply
	 * @mbggenerated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method corresponds to the database table weibo_reply
	 * @mbggenerated
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method corresponds to the database table weibo_reply
	 * @mbggenerated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method corresponds to the database table weibo_reply
	 * @mbggenerated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method corresponds to the database table weibo_reply
	 * @mbggenerated
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table weibo_reply
	 * @mbggenerated
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andUuidIsNull() {
			addCriterion("reply.UUID is null");
			return (Criteria) this;
		}

		public Criteria andUuidIsNotNull() {
			addCriterion("reply.UUID is not null");
			return (Criteria) this;
		}

		public Criteria andUuidEqualTo(String value) {
			addCriterion("reply.UUID =", value, "uuid");
			return (Criteria) this;
		}

		public Criteria andUuidNotEqualTo(String value) {
			addCriterion("reply.UUID <>", value, "uuid");
			return (Criteria) this;
		}

		public Criteria andUuidGreaterThan(String value) {
			addCriterion("reply.UUID >", value, "uuid");
			return (Criteria) this;
		}

		public Criteria andUuidGreaterThanOrEqualTo(String value) {
			addCriterion("reply.UUID >=", value, "uuid");
			return (Criteria) this;
		}

		public Criteria andUuidLessThan(String value) {
			addCriterion("reply.UUID <", value, "uuid");
			return (Criteria) this;
		}

		public Criteria andUuidLessThanOrEqualTo(String value) {
			addCriterion("reply.UUID <=", value, "uuid");
			return (Criteria) this;
		}

		public Criteria andUuidLike(String value) {
			addCriterion("reply.UUID like", value, "uuid");
			return (Criteria) this;
		}

		public Criteria andUuidNotLike(String value) {
			addCriterion("reply.UUID not like", value, "uuid");
			return (Criteria) this;
		}

		public Criteria andUuidIn(List<String> values) {
			addCriterion("reply.UUID in", values, "uuid");
			return (Criteria) this;
		}

		public Criteria andUuidNotIn(List<String> values) {
			addCriterion("reply.UUID not in", values, "uuid");
			return (Criteria) this;
		}

		public Criteria andUuidBetween(String value1, String value2) {
			addCriterion("reply.UUID between", value1, value2, "uuid");
			return (Criteria) this;
		}

		public Criteria andUuidNotBetween(String value1, String value2) {
			addCriterion("reply.UUID not between", value1, value2, "uuid");
			return (Criteria) this;
		}

		public Criteria andUserIdIsNull() {
			addCriterion("reply.USER_ID is null");
			return (Criteria) this;
		}

		public Criteria andUserIdIsNotNull() {
			addCriterion("reply.USER_ID is not null");
			return (Criteria) this;
		}

		public Criteria andUserIdEqualTo(String value) {
			addCriterion("reply.USER_ID =", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotEqualTo(String value) {
			addCriterion("reply.USER_ID <>", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdGreaterThan(String value) {
			addCriterion("reply.USER_ID >", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdGreaterThanOrEqualTo(String value) {
			addCriterion("reply.USER_ID >=", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdLessThan(String value) {
			addCriterion("reply.USER_ID <", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdLessThanOrEqualTo(String value) {
			addCriterion("reply.USER_ID <=", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdLike(String value) {
			addCriterion("reply.USER_ID like", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotLike(String value) {
			addCriterion("reply.USER_ID not like", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdIn(List<String> values) {
			addCriterion("reply.USER_ID in", values, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotIn(List<String> values) {
			addCriterion("reply.USER_ID not in", values, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdBetween(String value1, String value2) {
			addCriterion("reply.USER_ID between", value1, value2, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotBetween(String value1, String value2) {
			addCriterion("reply.USER_ID not between", value1, value2, "userId");
			return (Criteria) this;
		}

		public Criteria andWeiboUuidIsNull() {
			addCriterion("reply.WEIBO_UUID is null");
			return (Criteria) this;
		}

		public Criteria andWeiboUuidIsNotNull() {
			addCriterion("reply.WEIBO_UUID is not null");
			return (Criteria) this;
		}

		public Criteria andWeiboUuidEqualTo(String value) {
			addCriterion("reply.WEIBO_UUID =", value, "weiboUuid");
			return (Criteria) this;
		}

		public Criteria andWeiboUuidNotEqualTo(String value) {
			addCriterion("reply.WEIBO_UUID <>", value, "weiboUuid");
			return (Criteria) this;
		}

		public Criteria andWeiboUuidGreaterThan(String value) {
			addCriterion("reply.WEIBO_UUID >", value, "weiboUuid");
			return (Criteria) this;
		}

		public Criteria andWeiboUuidGreaterThanOrEqualTo(String value) {
			addCriterion("reply.WEIBO_UUID >=", value, "weiboUuid");
			return (Criteria) this;
		}

		public Criteria andWeiboUuidLessThan(String value) {
			addCriterion("reply.WEIBO_UUID <", value, "weiboUuid");
			return (Criteria) this;
		}

		public Criteria andWeiboUuidLessThanOrEqualTo(String value) {
			addCriterion("reply.WEIBO_UUID <=", value, "weiboUuid");
			return (Criteria) this;
		}

		public Criteria andWeiboUuidLike(String value) {
			addCriterion("reply.WEIBO_UUID like", value, "weiboUuid");
			return (Criteria) this;
		}

		public Criteria andWeiboUuidNotLike(String value) {
			addCriterion("reply.WEIBO_UUID not like", value, "weiboUuid");
			return (Criteria) this;
		}

		public Criteria andWeiboUuidIn(List<String> values) {
			addCriterion("reply.WEIBO_UUID in", values, "weiboUuid");
			return (Criteria) this;
		}

		public Criteria andWeiboUuidNotIn(List<String> values) {
			addCriterion("reply.WEIBO_UUID not in", values, "weiboUuid");
			return (Criteria) this;
		}

		public Criteria andWeiboUuidBetween(String value1, String value2) {
			addCriterion("reply.WEIBO_UUID between", value1, value2, "weiboUuid");
			return (Criteria) this;
		}

		public Criteria andWeiboUuidNotBetween(String value1, String value2) {
			addCriterion("reply.WEIBO_UUID not between", value1, value2, "weiboUuid");
			return (Criteria) this;
		}

		public Criteria andPublishtimeIsNull() {
			addCriterion("reply.PUBLISHTIME is null");
			return (Criteria) this;
		}

		public Criteria andPublishtimeIsNotNull() {
			addCriterion("reply.PUBLISHTIME is not null");
			return (Criteria) this;
		}

		public Criteria andPublishtimeEqualTo(Date value) {
			addCriterion("reply.PUBLISHTIME =", value, "publishtime");
			return (Criteria) this;
		}

		public Criteria andPublishtimeNotEqualTo(Date value) {
			addCriterion("reply.PUBLISHTIME <>", value, "publishtime");
			return (Criteria) this;
		}

		public Criteria andPublishtimeGreaterThan(Date value) {
			addCriterion("reply.PUBLISHTIME >", value, "publishtime");
			return (Criteria) this;
		}

		public Criteria andPublishtimeGreaterThanOrEqualTo(Date value) {
			addCriterion("reply.PUBLISHTIME >=", value, "publishtime");
			return (Criteria) this;
		}

		public Criteria andPublishtimeLessThan(Date value) {
			addCriterion("reply.PUBLISHTIME <", value, "publishtime");
			return (Criteria) this;
		}

		public Criteria andPublishtimeLessThanOrEqualTo(Date value) {
			addCriterion("reply.PUBLISHTIME <=", value, "publishtime");
			return (Criteria) this;
		}

		public Criteria andPublishtimeIn(List<Date> values) {
			addCriterion("reply.PUBLISHTIME in", values, "publishtime");
			return (Criteria) this;
		}

		public Criteria andPublishtimeNotIn(List<Date> values) {
			addCriterion("reply.PUBLISHTIME not in", values, "publishtime");
			return (Criteria) this;
		}

		public Criteria andPublishtimeBetween(Date value1, Date value2) {
			addCriterion("reply.PUBLISHTIME between", value1, value2, "publishtime");
			return (Criteria) this;
		}

		public Criteria andPublishtimeNotBetween(Date value1, Date value2) {
			addCriterion("reply.PUBLISHTIME not between", value1, value2, "publishtime");
			return (Criteria) this;
		}

		public Criteria andContentIsNull() {
			addCriterion("reply.CONTENT is null");
			return (Criteria) this;
		}

		public Criteria andContentIsNotNull() {
			addCriterion("reply.CONTENT is not null");
			return (Criteria) this;
		}

		public Criteria andContentEqualTo(String value) {
			addCriterion("reply.CONTENT =", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentNotEqualTo(String value) {
			addCriterion("reply.CONTENT <>", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentGreaterThan(String value) {
			addCriterion("reply.CONTENT >", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentGreaterThanOrEqualTo(String value) {
			addCriterion("reply.CONTENT >=", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentLessThan(String value) {
			addCriterion("reply.CONTENT <", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentLessThanOrEqualTo(String value) {
			addCriterion("reply.CONTENT <=", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentLike(String value) {
			addCriterion("reply.CONTENT like", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentNotLike(String value) {
			addCriterion("reply.CONTENT not like", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentIn(List<String> values) {
			addCriterion("reply.CONTENT in", values, "content");
			return (Criteria) this;
		}

		public Criteria andContentNotIn(List<String> values) {
			addCriterion("reply.CONTENT not in", values, "content");
			return (Criteria) this;
		}

		public Criteria andContentBetween(String value1, String value2) {
			addCriterion("reply.CONTENT between", value1, value2, "content");
			return (Criteria) this;
		}

		public Criteria andContentNotBetween(String value1, String value2) {
			addCriterion("reply.CONTENT not between", value1, value2, "content");
			return (Criteria) this;
		}

		public Criteria andDeletedIsNull() {
			addCriterion("reply.DELETED is null");
			return (Criteria) this;
		}

		public Criteria andDeletedIsNotNull() {
			addCriterion("reply.DELETED is not null");
			return (Criteria) this;
		}

		public Criteria andDeletedEqualTo(Byte value) {
			addCriterion("reply.DELETED =", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedNotEqualTo(Byte value) {
			addCriterion("reply.DELETED <>", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedGreaterThan(Byte value) {
			addCriterion("reply.DELETED >", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedGreaterThanOrEqualTo(Byte value) {
			addCriterion("reply.DELETED >=", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedLessThan(Byte value) {
			addCriterion("reply.DELETED <", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedLessThanOrEqualTo(Byte value) {
			addCriterion("reply.DELETED <=", value, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedIn(List<Byte> values) {
			addCriterion("reply.DELETED in", values, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedNotIn(List<Byte> values) {
			addCriterion("reply.DELETED not in", values, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedBetween(Byte value1, Byte value2) {
			addCriterion("reply.DELETED between", value1, value2, "deleted");
			return (Criteria) this;
		}

		public Criteria andDeletedNotBetween(Byte value1, Byte value2) {
			addCriterion("reply.DELETED not between", value1, value2, "deleted");
			return (Criteria) this;
		}

		public Criteria andReplyWhoIsNull() {
			addCriterion("reply.REPLY_WHO is null");
			return (Criteria) this;
		}

		public Criteria andReplyWhoIsNotNull() {
			addCriterion("reply.REPLY_WHO is not null");
			return (Criteria) this;
		}

		public Criteria andReplyWhoEqualTo(String value) {
			addCriterion("reply.REPLY_WHO =", value, "replyWho");
			return (Criteria) this;
		}

		public Criteria andReplyWhoNotEqualTo(String value) {
			addCriterion("reply.REPLY_WHO <>", value, "replyWho");
			return (Criteria) this;
		}

		public Criteria andReplyWhoGreaterThan(String value) {
			addCriterion("reply.REPLY_WHO >", value, "replyWho");
			return (Criteria) this;
		}

		public Criteria andReplyWhoGreaterThanOrEqualTo(String value) {
			addCriterion("reply.REPLY_WHO >=", value, "replyWho");
			return (Criteria) this;
		}

		public Criteria andReplyWhoLessThan(String value) {
			addCriterion("reply.REPLY_WHO <", value, "replyWho");
			return (Criteria) this;
		}

		public Criteria andReplyWhoLessThanOrEqualTo(String value) {
			addCriterion("reply.REPLY_WHO <=", value, "replyWho");
			return (Criteria) this;
		}

		public Criteria andReplyWhoLike(String value) {
			addCriterion("reply.REPLY_WHO like", value, "replyWho");
			return (Criteria) this;
		}

		public Criteria andReplyWhoNotLike(String value) {
			addCriterion("reply.REPLY_WHO not like", value, "replyWho");
			return (Criteria) this;
		}

		public Criteria andReplyWhoIn(List<String> values) {
			addCriterion("reply.REPLY_WHO in", values, "replyWho");
			return (Criteria) this;
		}

		public Criteria andReplyWhoNotIn(List<String> values) {
			addCriterion("reply.REPLY_WHO not in", values, "replyWho");
			return (Criteria) this;
		}

		public Criteria andReplyWhoBetween(String value1, String value2) {
			addCriterion("reply.REPLY_WHO between", value1, value2, "replyWho");
			return (Criteria) this;
		}

		public Criteria andReplyWhoNotBetween(String value1, String value2) {
			addCriterion("reply.REPLY_WHO not between", value1, value2, "replyWho");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table weibo_reply
	 * @mbggenerated
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class corresponds to the database table weibo_reply
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}