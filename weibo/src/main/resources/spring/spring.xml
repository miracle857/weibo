<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<import resource="spring-mvc.xml" />
	<!-- <import resource="spring-shiro.xml" /> -->
	<!-- <import resource="redis-context.xml" /> -->

	<context:annotation-config />
	<context:component-scan base-package="com.mxh" />

	<!-- 第一步：配置数据源 -->
	<context:property-placeholder location="classpath:config.properties" />

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName">
			<value>${db.driver}</value>
		</property>
		<property name="url">
			<value>${db.url}</value>
		</property>
		<property name="username">
			<value>${db.user}</value>
		</property>
		<property name="password">
			<value>${db.password}</value>
		</property>
		<!-- 最大连接数 -->
		<property name="maxActive">
			<value>80</value>
		</property>
		<!-- 最大空闲连接数 -->
		<property name="maxIdle">
			<value>20</value>
		</property>
		<!-- 最大等待时间:当没有可用连接时,连接池等待连接被归还的最大时间 单位:毫秒 -->
		<!-- 超过时间则抛出异常,如果设置为-1表示无限等待 -->
		<property name="maxWait">
			<value>3000</value>
		</property>
	</bean>

	<!-- 第二步：创建sqlSessionFactory。生产sqlSession -->
	<bean id="sqlSessionFactory" class=" org.mybatis.spring.SqlSessionFactoryBean ">
		<property name="mapperLocations" value="classpath:com/mxh/weibo/dao/*.xml"></property>
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:spring/mybatis-config.xml" />
	</bean>

	<!-- 配置mybatis接口代理开发 * 接口类名和映射文件必须同名 * 接口类和映射文件必须在同一个目录 下 * 映射文件namespace名字必须是接口的全类路径名 
		* 接口的方法名必须和映射Statement的ｉｄ一致 -->
	<bean class=" org.mybatis.spring.mapper.MapperScannerConfigurer ">
		<property name="basePackage" value="com.mxh.weibo.dao"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>


	<!-- 第三步：事务 -->
	<bean id="transactionManager"
		class=" org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 配置通知 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>

	</tx:advice>

	<!-- 配置拦截service -->
	<aop:config>
		<aop:advisor advice-ref="txAdvice"
			pointcut="execution(* com.mxh.weibo.service
.*.*(..))" />

	</aop:config>


</beans>